<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mvc.app.dao.MajorMapper">
  <resultMap id="BaseResultMap" type="com.mvc.app.model.Major">
    <id column="mstuid" jdbcType="VARCHAR" property="mstuid" />
    <id column="mcourseid" jdbcType="VARCHAR" property="mcourseid" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="majortime" jdbcType="VARCHAR" property="majortime" />
  </resultMap>
  <resultMap id="WithCourseMap" type="com.mvc.app.model.Major">
    <id column="mstuid" jdbcType="VARCHAR" property="mstuid" />
    <id column="mcourseid" jdbcType="VARCHAR" property="mcourseid" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="majortime" jdbcType="VARCHAR" property="majortime" />
    <association property="course" javaType="com.mvc.app.model.Course">
       <id column="mcourseid" property="mcourseid"></id>
       <result column="cname" property="cname"></result>
       <result column="ctype" property="ctype"></result>
       <result column="examine" property="examine"></result>
       <result column="credit" property="credit"></result>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mstuid, mcourseid, score, majortime
  </sql>
    <sql id="WithCourse_Column_List">
    m.mstuid, m.mcourseid, m.score, m.majortime
    ,c.courseid,c.cname
  </sql>
  <select id="selectByExample" parameterType="com.mvc.app.model.MajorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from major
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.mvc.app.model.MajorKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from major
    where mstuid = #{mstuid,jdbcType=VARCHAR}
    and mcourseid = #{mcourseid,jdbcType=VARCHAR}
  </select>
  <select id="selectByStuid" resultMap="BaseResultMap" parameterType="com.mvc.app.model.MajorKey">
       select 
    <include refid="Base_Column_List" />
    from major m
    <!-- 
    left join course c on m.mcourseid=CONVERT(c.courseid USING utf8)  COLLATE utf8_unicode_ci
     -->
    where m.mstuid=#{mstuid}
  </select>
    <select id="selectByMcourseid" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
    from major
    where  mcourseid = #{mcourseid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.mvc.app.model.MajorKey">
    delete from major
    where mstuid = #{mstuid,jdbcType=VARCHAR}
      and mcourseid = #{mcourseid,jdbcType=VARCHAR}
  </delete>
   <delete id="deleteByMstuid" parameterType="java.lang.String">
    delete from major
    where mstuid = #{mstuid,jdbcType=VARCHAR}
      
  </delete>
  <delete id="deleteByExample" parameterType="com.mvc.app.model.MajorExample">
    delete from major
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mvc.app.model.Major">
    insert into major (mstuid, mcourseid, score, 
      majortime)
    values (#{mstuid,jdbcType=VARCHAR}, #{mcourseid,jdbcType=VARCHAR}, #{score,jdbcType=DOUBLE}, 
      #{majortime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mvc.app.model.Major">
    insert into major
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mstuid != null">
        mstuid,
      </if>
      <if test="mcourseid != null">
        mcourseid,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="majortime != null">
        majortime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mstuid != null">
        #{mstuid,jdbcType=VARCHAR},
      </if>
      <if test="mcourseid != null">
        #{mcourseid,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="majortime != null">
        #{majortime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mvc.app.model.MajorExample" resultType="java.lang.Long">
    select count(*) from major
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update major
    <set>
      <if test="record.mstuid != null">
        mstuid = #{record.mstuid,jdbcType=VARCHAR},
      </if>
      <if test="record.mcourseid != null">
        mcourseid = #{record.mcourseid,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=DOUBLE},
      </if>
      <if test="record.majortime != null">
        majortime = #{record.majortime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update major
    set mstuid = #{record.mstuid,jdbcType=VARCHAR},
      mcourseid = #{record.mcourseid,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=DOUBLE},
      majortime = #{record.majortime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mvc.app.model.Major">
    update major
    <set>
      <if test="score != null">
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="majortime != null">
        majortime = #{majortime,jdbcType=VARCHAR},
      </if>
    </set>
    where mstuid = #{mstuid,jdbcType=VARCHAR}
      and mcourseid = #{mcourseid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mvc.app.model.Major">
    update major
    set score = #{score,jdbcType=DOUBLE},
      majortime = #{majortime,jdbcType=VARCHAR}
    where mstuid = #{mstuid,jdbcType=VARCHAR}
      and mcourseid = #{mcourseid,jdbcType=VARCHAR}
  </update>
</mapper>