<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rifu.mappers.StudentMapper">

	<!--	配置使用二级缓存
    	1，size:表示缓存cache中能容纳的最大元素数。默认是1024；
    	2，flushInterval:定义缓存刷新周期，以毫秒计；
     	3，eviction:定义缓存的移除机制；默认是LRU(least recently userd，最近最少使用),还有FIFO(first in first out，先进先出)
     	4，readOnly:默认值是false，假如是true的话，缓存只能读。
     -->
	<cache size="1024" flushInterval="60000" eviction="LRU" readOnly="false"/>


 	 <resultMap type="Student" id="StudentResult">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="age" column="age"/>
	</resultMap>

	<select id="searchStudents" parameterType="Map" resultMap="StudentResult" useCache="true" flushCache="false">
		select * from t_student
		where gradeId=#{gradeId}
		<if test="name!=null">
			and name like #{name}
		</if>
		<if test="age!=null">
			and age=#{age}
		</if>
	</select>
	
	<select id="searchStudents2" parameterType="Map" resultMap="StudentResult">
		select * from t_student
		<choose>
			<when test="searchBy=='gradeId'">
				where gradeId=#{gradeId}
			</when>
			<when test="searcharBy=='name'">
				where name like #{name}
			</when>
			<otherwise>
				where age=#{age}
			</otherwise>
		</choose>
	</select>
	
	<select id="searchStudents3" parameterType="Map" resultMap="StudentResult">
		select * from t_student
		<where>
			<if test="gradeId!=null">
			  gradeId  =#{gradeId}
			</if>
			<if test="name!=null">
			 and name like #{name}
			</if>
			<if test="age!=null">
			 and age=#{age}
			</if>
		</where>
	</select>
	
	<select id="searchStudents4" parameterType="Map" resultMap="StudentResult">
		select * from t_student
		<trim prefix="where" prefixOverrides="and/or">
			<if test="gradeId!=null">
			  gradeId  =#{gradeId}
			</if>
			<if test="name!=null">
			 and name like #{name}
			</if>
			<if test="age!=null">
			 and age=#{age}
			</if>
		</trim>
	</select>
	
	<select id="searchStudents5" parameterType="Map" resultMap="StudentResult">
		select * from t_student
		<if test="gradeIds!=null">
			<where>
				gradeId in
				<foreach collection="gradeIds" item="gradeId" open="(" separator="," close=")">
				#{gradeId}
				</foreach>
			</where>
		</if>
	</select>
	
	<update id="updateStudent" parameterType="Student">
		update t_student
		<set>
			<if test="name!=null">
				name=#{name},
			</if>
			<if test="age!=null">
				age=#{age},
			</if>
		</set>
		where id=#{id}
	</update>
	
	<insert id="insertStudent" parameterType="Student">
		insert t_student(name,age,pic,remark) values(#{name},#{age},#{pic},#{remark})
	</insert>
	
	<select id="findStudentById" parameterType="Integer" resultType="Student">
		select * from t_student where id=#{id}
	</select>
	
	<select id="getStudents"  resultMap="StudentResult">
		select * from t_student
	</select>
	
	<select id="getStudents2" parameterType="Map" resultMap="StudentResult">
		select * from t_student 
		<if test="start!=null and limit!=null">
			limit #{start},#{limit}
		</if>
	</select>
	
</mapper> 