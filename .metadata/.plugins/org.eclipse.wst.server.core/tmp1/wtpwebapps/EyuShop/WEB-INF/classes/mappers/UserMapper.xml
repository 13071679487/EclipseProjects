<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rifu.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.rifu.pojo.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="head_icon" jdbcType="VARCHAR" property="headIcon" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="user_status" jdbcType="INTEGER" property="userStatus" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="role" jdbcType="INTEGER" property="role" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, account, user_password, username, head_icon, gender, user_status, token, 
    phone, email, create_time, update_time, role
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rifu.pojo.User">
    insert into t_user (user_id, account, user_password, 
      username, head_icon, gender, 
      user_status, token, phone, 
      email, create_time, update_time, 
      role)
    values (#{userId,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{headIcon,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{userStatus,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{role,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.rifu.pojo.User" useGeneratedKeys="true" keyProperty="userId">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="headIcon != null">
        head_icon,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="headIcon != null">
        #{headIcon,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rifu.pojo.User">
    update t_user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="headIcon != null">
        head_icon = #{headIcon,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rifu.pojo.User">
    update t_user
    set account = #{account,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      head_icon = #{headIcon,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      user_status = #{userStatus,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      role = #{role,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
   <select id="isExist" parameterType="map" resultType="int">
  	select count(*)
  	from t_user
  	<where>
		<if test="userId != null">
			and user_id like #{userId}
		</if>		
		<if test="acc != null">
			and account = #{acc}
		</if>
	</where>
  </select>
  
  <select id="login" parameterType="map" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List"></include>
  	from t_user
  	where account =#{account}
  	and user_password=#{pwd}
  </select>
  
  
  <select id="hasRegisteredByPhone" parameterType="string" resultType="int">
  select user_id 
  from t_user
  where phone = #{phone}
  </select>
</mapper>