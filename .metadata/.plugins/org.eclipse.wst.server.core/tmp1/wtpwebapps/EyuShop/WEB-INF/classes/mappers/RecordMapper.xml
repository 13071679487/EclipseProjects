<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rifu.dao.RecordMapper">
  <resultMap id="BaseResultMap" type="com.rifu.pojo.Record">
    <id column="record_id" jdbcType="INTEGER" property="recordId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    record_id, user_id, product_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_record
    where record_id = #{recordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_record
    where record_id = #{recordId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rifu.pojo.Record">
    insert into t_record (record_id, user_id, product_id, 
      create_time, update_time)
    values (#{recordId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rifu.pojo.Record">
    insert into t_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        record_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rifu.pojo.Record">
    update t_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rifu.pojo.Record">
    update t_record
    set user_id = #{userId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
  
  <select id="selectByUserId" parameterType="int" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List"></include>
  from t_record
  where user_id = #{userId,jdbcType=INTEGER}
  order by update_time DESC
  </select>
  
  <delete id="deleteByPrimaryKeyAndUerId" parameterType="map">
  	delete from t_record
  	where user_id = #{userId,jdbcType=INTEGER}
  	and record_id = #{recordId,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteAllByUserId" parameterType="int">
  	delete from t_record
  	where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  
  <select id="selectCountByUserId" parameterType="int" resultType="int">
  	select COUNT(1)
  	from t_record
  	where user_id = #{userId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByProductIdAndUserId" parameterType="map" resultType="int">
  select COUNT(1)
  	from t_record
  	where user_id = #{userId,jdbcType=INTEGER}
  	and product_id = #{productId,jdbcType=INTEGER}
  </select>
  
  <update id="updateByProductIdAndUserId" parameterType="map" >
  update t_record
  set update_time = now()
  where user_id = #{userId,jdbcType=INTEGER}
  	and product_id = #{productId,jdbcType=INTEGER}
  </update>
</mapper>