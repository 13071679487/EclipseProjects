/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.45
 * Generated at: 2018-10-04 14:59:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.layout;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class personal_005fupload_005fheadicon_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<!-- 引入样式 -->\r\n");
      out.write("<link href=\"/EyuShopPortal/layui/css/layui.css\" rel=\"stylesheet\">\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/EyuShopPortal/js/jquery-1.11.2.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/EyuShopPortal/js/common.js\"></script>\r\n");
      out.write("\t<script src=\"/EyuShopPortal/layui/layui.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\t<div class=\"layui-row\">\r\n");
      out.write("\t\t<div class=\"layui-col-md6 layui-col-md-offset3\" style=\"text-align: center;padding:6px;\">\r\n");
      out.write("\t\t\t<div class=\"layui-row\">\r\n");
      out.write("\t\t\t\t<button id=\"btn_choosePic\" class=\"layui-btn layui-btn-sm\"><i class=\"layui-icon layui-icon-picture\"></i>选择图片</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<input id=\"upload_usericon\" type=\"file\" name=\"file\" accept=\"image/jpeg,image/jpg,image/png\" style='display:none;'>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div style=\"margin-top:15px;\">\r\n");
      out.write("\t\t\t\t<img id=\"preview\" class=\"layui-layout-circle\" alt=\"\" style=\"height:160px;width:160px;border-radius:50%;\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"layui-row\" style=\"margin-top:25px;\">\r\n");
      out.write("\t\t\t\t<button id=\"btn_ensureUpload\" class=\"layui-btn layui-btn-sm\" >确认修改</button>\r\n");
      out.write("\t\t\t\t<!-- <button id=\"btn_cancelUpload\" class=\"layui-btn layui-btn-sm\" style=\"background-color:#EEE5DE\">取消</button> -->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\tvar files;\r\n");
      out.write("\t\r\n");
      out.write("\tvar layer;\r\n");
      out.write("\tlayui.use('layer', function(){\r\n");
      out.write("\t\t  layer = layui.layer;\r\n");
      out.write("\t\t  \r\n");
      out.write("\t}); \r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#btn_choosePic\").on(\"click\",function(){\r\n");
      out.write("\t\t$(\"#upload_usericon\").click();\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#btn_ensureUpload\").on(\"click\",function(){\r\n");
      out.write("\t\tif(files&&files[0]){\r\n");
      out.write("\t\t\tupload(files);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})\r\n");
      out.write("\t//监听所选择图片变化情况\r\n");
      out.write("\t$(\"#upload_usericon\").change(function(){\r\n");
      out.write("\t\tif(this.files&&this.files[0]){\r\n");
      out.write("\t\t\tvar reader =new FileReader();\r\n");
      out.write("\t\t\treader.onload=function(evt){\r\n");
      out.write("\t\t\t\t$(\"#preview\").prop(\"src\",evt.target.result);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\treader.readAsDataURL(this.files[0]); \r\n");
      out.write("\t\t\tfiles=this.files;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("\tfunction upload(files){\r\n");
      out.write("\t\tvar formData = new FormData();  \r\n");
      out.write("\t    formData.append(\"file\", files[0]);  \r\n");
      out.write("\t    $.ajax({  \r\n");
      out.write("\t        data : formData,  \r\n");
      out.write("\t        type : \"POST\",  \r\n");
      out.write("\t        url : remotePath+\"/user/upload\", //图片上传出来的url，返回的是图片上传后的路径，http格式  \r\n");
      out.write("\t        cache : false,  \r\n");
      out.write("\t        contentType : false,  \r\n");
      out.write("\t        processData : false,  \r\n");
      out.write("\t        success: function(result) {//data是返回的hash,key之类的值，key是定义的文件名  \r\n");
      out.write("\t        \tif(result.code==100){\r\n");
      out.write("\t        \t\tlayer.msg(\"上传成功\");\r\n");
      out.write("\t        \t}else{\r\n");
      out.write("\t        \t\tlayer.msg(result.msg);\r\n");
      out.write("\t        \t}\r\n");
      out.write("\t        },  \r\n");
      out.write("\t        error:function(){  \r\n");
      out.write("\t        \tlayer.msg(\"请检查网络\");\r\n");
      out.write("\t        }  \r\n");
      out.write("\t    });  \r\n");
      out.write("\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
