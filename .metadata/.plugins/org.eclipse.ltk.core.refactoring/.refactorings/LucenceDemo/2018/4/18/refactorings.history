<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Copy element &apos;IndexingTest2.java&apos; to &apos;LucenceDemo/src/main/java/com.rifu.lucence&apos;&#x0D;&#x0A;- Original project: &apos;LucenceDemo&apos;&#x0D;&#x0A;- Destination element: &apos;LucenceDemo/src/main/java/com.rifu.lucence&apos;&#x0D;&#x0A;- Original element: &apos;com.rifu.lucence.IndexingTest2.java&apos;" description="Copy compilation unit" destination="/src\/main\/java&lt;com.rifu.lucence" element1="/src\/main\/java&lt;com.rifu.lucence{IndexingTest2.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1525088819549" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;query&apos; from expression &apos;NumericRangeQuery.newIntRange(&quot;id&quot;,1,3,true,true)&apos;&#x0D;&#x0A;- Original project: &apos;LucenceDemo&apos;&#x0D;&#x0A;- Variable name: &apos;query&apos;&#x0D;&#x0A;- Destination method: &apos;com.rifu.lucence.IndexingTest3.searchByNumericRange()&apos;&#x0D;&#x0A;- Variable expression: &apos;NumericRangeQuery.newIntRange(&quot;id&quot;,1,3,true,true)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;query&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java&lt;com.rifu.lucence{IndexingTest3.java" name="query" replace="true" selection="3197 0" stamp="1525089034270" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;mixQueryBuilder&apos; from expression &apos;new BooleanQuery.Builder()&apos;&#x0D;&#x0A;- Original project: &apos;LucenceDemo&apos;&#x0D;&#x0A;- Variable name: &apos;mixQueryBuilder&apos;&#x0D;&#x0A;- Destination method: &apos;com.rifu.lucence.IndexingTest3.searchByMix()&apos;&#x0D;&#x0A;- Variable expression: &apos;new BooleanQuery.Builder()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;mixQueryBuilder&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java&lt;com.rifu.lucence{IndexingTest3.java" name="mixQueryBuilder" replace="true" selection="3701 0" stamp="1525089561145" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;IndexingTest3.java&apos; to &apos;LucenceDemo/src/main/java/com.rifu.lucence&apos;&#x0D;&#x0A;- Original project: &apos;LucenceDemo&apos;&#x0D;&#x0A;- Destination element: &apos;LucenceDemo/src/main/java/com.rifu.lucence&apos;&#x0D;&#x0A;- Original element: &apos;com.rifu.lucence.IndexingTest3.java&apos;" description="Copy compilation unit" destination="/src\/main\/java&lt;com.rifu.lucence" element1="/src\/main\/java&lt;com.rifu.lucence{IndexingTest3.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1525095982449" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;analyzer&apos; from expression &apos;new SmartChineseAnalyzer()&apos;&#x0D;&#x0A;- Original project: &apos;LucenceDemo&apos;&#x0D;&#x0A;- Variable name: &apos;analyzer&apos;&#x0D;&#x0A;- Destination method: &apos;com.rifu.lucence.IndexingTest4.getWriter()&apos;&#x0D;&#x0A;- Variable expression: &apos;new SmartChineseAnalyzer()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;analyzer&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java&lt;com.rifu.lucence{IndexingTest4.java" name="analyzer" replace="true" selection="1655 0" stamp="1525096525829" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;analyzer&apos; from expression &apos;new SmartChineseAnalyzer()&apos;&#x0D;&#x0A;- Original project: &apos;LucenceDemo&apos;&#x0D;&#x0A;- Variable name: &apos;analyzer&apos;&#x0D;&#x0A;- Destination method: &apos;com.rifu.lucence.IndexingTest4.searchByMix()&apos;&#x0D;&#x0A;- Variable expression: &apos;new SmartChineseAnalyzer()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;analyzer&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java&lt;com.rifu.lucence{IndexingTest4.java" name="analyzer" replace="true" selection="2893 0" stamp="1525096630192" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;queryParser&apos; from expression &apos;new QueryParser(analyzer)&apos;&#x0D;&#x0A;- Original project: &apos;LucenceDemo&apos;&#x0D;&#x0A;- Variable name: &apos;queryParser&apos;&#x0D;&#x0A;- Destination method: &apos;com.rifu.lucence.IndexingTest4.searchByMix()&apos;&#x0D;&#x0A;- Variable expression: &apos;new QueryParser(analyzer)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;queryParser&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java&lt;com.rifu.lucence{IndexingTest4.java" name="queryParser" replace="true" selection="3022 0" stamp="1525096653841" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;query&apos; from expression &apos;queryParser.parse(&quot;茂名&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;LucenceDemo&apos;&#x0D;&#x0A;- Variable name: &apos;query&apos;&#x0D;&#x0A;- Destination method: &apos;com.rifu.lucence.IndexingTest4.searchByMix()&apos;&#x0D;&#x0A;- Variable expression: &apos;queryParser.parse(&quot;茂名&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;query&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java&lt;com.rifu.lucence{IndexingTest4.java" name="query" replace="true" selection="2980 0" stamp="1525096784140" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;simpleHTMLFormatter&apos; from expression &apos;new SimpleHTMLFormatter()&apos;&#x0D;&#x0A;- Original project: &apos;LucenceDemo&apos;&#x0D;&#x0A;- Variable name: &apos;simpleHTMLFormatter&apos;&#x0D;&#x0A;- Destination method: &apos;com.rifu.lucence.IndexingTest4.searchByMix()&apos;&#x0D;&#x0A;- Variable expression: &apos;new SimpleHTMLFormatter()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;simpleHTMLFormatter&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java&lt;com.rifu.lucence{IndexingTest4.java" name="simpleHTMLFormatter" replace="true" selection="3329 0" stamp="1525098475895" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;content&apos; from expression &apos;doc.get(&quot;content&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;LucenceDemo&apos;&#x0D;&#x0A;- Variable name: &apos;content&apos;&#x0D;&#x0A;- Destination method: &apos;com.rifu.lucence.IndexingTest4.searchByMix()&apos;&#x0D;&#x0A;- Variable expression: &apos;doc.get(&quot;content&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;content&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java&lt;com.rifu.lucence{IndexingTest4.java" name="content" replace="true" selection="3854 0" stamp="1525099098185" version="1.0"/>
</session>